<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	   http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

<!--*********************************************************************************
     mybatis Setting
     ********************************************************************************* -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:/mapper/**/*Mapper.xml" />
		<!-- statement 선언의 오류를 좀 더 빠르게 파악하기 위해서 true로 설정 -->
		<property name="failFast" value="true" />
	</bean>

	<mybatis:scan base-package="com.navercorp.board" factory-ref="sqlSessionFactory" annotation="org.springframework.stereotype.Repository"/>

<!-- *********************************************************************************
     Transaction Setting
     ********************************************************************************* -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<!-- AOP로 트랜잭션 관리자를 적용할 대상 설정 // -->
	<aop:config proxy-target-class="true">
			<aop:advisor id="bbsTransactionAdvice" advice-ref="transactionAdvice" pointcut="@target(org.springframework.stereotype.Service) and
																						(execution(* com.navercorp.board..service.*Service.*(..)))" />
	</aop:config>

	<!-- AOP를 사용한 트랜잭션 관리 셋팅 // -->
	<!-- 1. Service 클래스의 select로 시작하는 메서드는 모두 read-only
		 2. Service 클래스의 select로 시작하지 않는 메서드는 모두 UnCheckedException 발생시 자동 rollback -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*"  rollback-for="Exception" />
			<tx:method name="update*"  rollback-for="Exception" />
			<tx:method name="insert*"  rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

</beans>